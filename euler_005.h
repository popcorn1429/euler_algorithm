#pragma once

/*
题目：
2520 是最小的能被 1-10 中每个数字整除的正整数。
最小的能被 1-20 中每个数整除的正整数是多少？
*/

#include "basic_headers.h"

void resolution() {
    //分析一番：1-20内的每个数字，若是素数，自然就是其本身，若是合数，则是更小的素数乘出来的
    //  比如 20 = 2 * 2 * 5
    //  目标数能整除20，自然能整除2  4  5  10 这些数。
    //  但不一定整除8 16，因为8=2*2*2，三个2，比20还要多。
    //  综上，只要将20以内每个数拆成素数，每个素数都取素数的最大幂，最后全部相乘即可
    //2 3 5 7 11 13 17 19
    //4 2 1 1 1  1  1  1
    cout << "result is " << (2*2*2*2) * (3*3) * 5 * 7 * 11 * 13 * 17 * 19 << endl;
}
